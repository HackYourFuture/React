{"version":3,"sources":["Components/Homework1/Homework1.js","Components/Homework2/Components/TodoItems/TodoItems.js","Components/Homework2/Components/AddItem/AddItem.js","Components/Homework2/Homework2.js","Components/Homework3/services/usersServices.js","Components/Homework3/Components/User/User.js","Components/Homework3/Components/UserList/UserList.js","Components/Homework3/Homework3.js","App.js","serviceWorker.js","index.js"],"names":["StaticTodoItem","_ref","description","deadline","className","react_default","a","createElement","DynamicTodoItem","_ref2","items","todoItems","map","_ref3","id","done","Homework1_StaticTodoItem","key","TodoList","state","Homework1_DynamicTodoItem","this","React","Component","Homework1","Homework1_TodoList","TodoItems","deleteTodoItem","length","concat","onClick","AddItem","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","props","addTodoItem","onSubmit","type","placeholder","onChange","Homework2","filter","todoItem","toConsumableArray","objectSpread","Math","random","Components_TodoItems_TodoItems","Components_AddItem_AddItem","url","User","name","surname","gender","region","UserList","users","usersList","Components_User_User","Homework3","_this2","fetch","then","response","json","Components_UserList_UserList","App","Components_Homework1_Homework1","Components_Homework2_Homework2","Components_Homework3_Homework3","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b6c62a8d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Homework1.css';\r\n\r\n/**\r\n * A function component that inserts a static item in a list\r\n * @param {props} param0 The destructured properties description and deadline\r\n * @return List item with the values of the properties\r\n */\r\nconst StaticTodoItem = ({ description, deadline, className }) => {\r\n  return (\r\n    <li className={className}>\r\n      <h3>{description}</h3>\r\n      <span>{deadline}</span>\r\n    </li>\r\n  );\r\n};\r\n\r\n/**\r\n * A function component that inserts a dynamic item in a list\r\n * @param {props} param0 The array of todoItems\r\n * @return\r\n *  - List item with the values of the todoItems of the array if todoItem is not done yet (false)\r\n *  - List item with the values of the todoItems of the array if todoItem is done (true)\r\n *  - The dynamic list of todoItems\r\n */\r\nconst DynamicTodoItem = ({ todoItems }) => {\r\n  const items = todoItems.map(({ id, description, deadline, done }) => {\r\n    return (\r\n      <StaticTodoItem\r\n        className={'list-item ' + (done ? 'todo-item-done' : '')}\r\n        key={id}\r\n        description={description}\r\n        deadline={deadline}\r\n      />\r\n    );\r\n  });\r\n  return <ul>{items}</ul>;\r\n};\r\n\r\n/**\r\n * A class component that contains the static and the dynamic items, every one of them in its own list\r\n * @return Here is the return of the static and dynamic lists\r\n */\r\nclass TodoList extends React.Component {\r\n  state = {\r\n    todoItems: [\r\n      {\r\n        id: 1,\r\n        description: 'Get out of bed',\r\n        deadline: '2017-09-11',\r\n        done: true,\r\n      },\r\n      {\r\n        id: 2,\r\n        description: 'Brush teeth',\r\n        deadline: '2017-09-10',\r\n        done: false,\r\n      },\r\n      {\r\n        id: 3,\r\n        description: 'Eat breakfast',\r\n        deadline: '2017-09-09',\r\n        done: false,\r\n      },\r\n    ],\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2 className=\"sub-header\">Static List:</h2>\r\n        <ul>\r\n          <StaticTodoItem\r\n            className=\"list-item\"\r\n            description=\"Get out of bed\"\r\n            deadline=\"Wed Sep 13 2017\"\r\n          />\r\n          <StaticTodoItem\r\n            className=\"list-item\"\r\n            description=\"Brush teeth\"\r\n            deadline=\"Thu Sep 14 2017\"\r\n          />\r\n          <StaticTodoItem\r\n            className=\"list-item\"\r\n            description=\"Eat breakfast\"\r\n            deadline=\"Fri Sep 15 2017\"\r\n          />\r\n        </ul>\r\n        <h2 className=\"sub-header\">Dynamic List:</h2>\r\n        <DynamicTodoItem todoItems={this.state.todoItems} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * This class component is the container of the Todo List application\r\n * @return Here is the return of the application\r\n */\r\nclass Homework1 extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"homework1\">\r\n        <h2 className=\"header\">Todo Lists</h2>\r\n        <TodoList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Homework1;\r\n","import React from 'react';\r\nimport './TodoItems.css';\r\n\r\n/**\r\n * A function component that inserts a dynamic item in a list of todo's\r\n * @param {props} param0 `todoItems` The array of todoItems, `deleteTodoItem` function to delete a todo item\r\n * @return\r\n *  - Todo item with the values of the todoItems of the array\r\n *  - The dynamic list of todoItems\r\n */\r\nconst TodoItems = ({ todoItems, deleteTodoItem }) => {\r\n  const items = todoItems.length ? (\r\n    todoItems.map(({ id, description, deadline, done }) => {\r\n      return (\r\n        <li key={id}>\r\n          <span className={`description ${done ? 'todo-item-done' : ''}`}>{description}</span>\r\n          <span className={`deadline ${done ? 'todo-item-done' : ''}`}>{deadline}</span>\r\n          <span className=\"action icon\" onClick={() => deleteTodoItem(id)}>\r\n            &times;\r\n          </span>\r\n        </li>\r\n      );\r\n    })\r\n  ) : (\r\n    <p>There is no todo items</p>\r\n  );\r\n  return (\r\n    <ul className=\"list-items\">\r\n      <li>\r\n        <span className=\"description title\">Todo Item Name</span>\r\n        <span className=\"deadline title\">Deadline</span>\r\n        <span className=\"action title\">Action</span>\r\n      </li>\r\n      {items}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoItems;\r\n","import React, { Component } from 'react';\r\nimport './AddItem.css';\r\n\r\n/**\r\n * A class component to add an item to the todo list.\r\n * @return This class returns a form to add a todo item and its deadline\r\n */\r\n\r\nclass AddItem extends Component {\r\n  state = {\r\n    description: '',\r\n    deadline: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (e.target.description.value === '') {\r\n      return false;\r\n    }\r\n    this.props.addTodoItem(this.state);\r\n    this.setState({\r\n      description: '',\r\n      deadline: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Todo name...\"\r\n          id=\"description\"\r\n          onChange={this.handleChange}\r\n          value={this.state.description}\r\n        />\r\n        <input type=\"date\" id=\"deadline\" onChange={this.handleChange} value={this.state.deadline} />\r\n        <input type=\"submit\" value=\"Add\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddItem;\r\n","import React, { Component } from 'react';\nimport './Homework2.css';\nimport TodoItems from './Components/TodoItems/TodoItems';\nimport AddItem from './Components/AddItem/AddItem';\n\n/**\n * This class component is the container of the Todo List application\n * @return Here is the return of the application\n */\nclass Homework2 extends Component {\n  state = {\n    todoItems: [\n      {\n        id: 1,\n        description: 'Get out of bed',\n        deadline: '2017-09-11',\n        done: true,\n      },\n      {\n        id: 2,\n        description: 'Brush teeth',\n        deadline: '2017-09-10',\n        done: false,\n      },\n      {\n        id: 3,\n        description: 'Eat breakfast',\n        deadline: '2017-09-09',\n        done: false,\n      },\n    ],\n  };\n\n  deleteTodoItem = id => {\n    let todoItems = this.state.todoItems.filter(todoItem => {\n      return todoItem.id !== id;\n    });\n    this.setState({ todoItems });\n  };\n\n  addTodoItem = todoItem => {\n    this.setState({\n      todoItems: [\n        ...this.state.todoItems,\n        {\n          ...todoItem,\n          id: Math.random() * 10 + 1,\n        },\n      ],\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"homework2\">\n        <h2 className=\"header-week2\">Todo App</h2>\n        <TodoItems todoItems={this.state.todoItems} deleteTodoItem={this.deleteTodoItem} />\n        <AddItem addTodoItem={this.addTodoItem} />\n      </div>\n    );\n  }\n}\n\nexport default Homework2;\n","const url = 'https://uinames.com/api/?amount=10';\r\n// const url = 'https://jsonplaceholder.typicode.com/users';\r\n\r\nexport function getUsers() {\r\n  return fetch(url).then(response => response.json());\r\n}\r\n","import React from 'react';\r\nimport './User.css';\r\n\r\nconst User = ({ name, surname, gender, region, className }) => {\r\n  return (\r\n    <li className={className}>\r\n      <span className=\"name\">\r\n        {name} {surname}\r\n      </span>\r\n      <span className=\"gender\">{gender}</span>\r\n      <span className=\"region\">{region}</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport './UserList.css';\r\nimport User from '../User/User';\r\n\r\nconst UserList = ({ users }) => {\r\n  const usersList = users ? (\r\n    users.map(({ name, surname, gender, region }) => (\r\n      <User\r\n        key={(name, surname)}\r\n        name={name}\r\n        surname={surname}\r\n        gender={gender}\r\n        region={region}\r\n        className=\"user\"\r\n      />\r\n    ))\r\n  ) : (\r\n    <li className=\"user\">\r\n      <h1>Loading...</h1>\r\n    </li>\r\n  );\r\n  return (\r\n    <ul className=\"users-list\">\r\n      <li>\r\n        <span className=\"name title\">Name</span>\r\n        <span className=\"gender title\">Gender</span>\r\n        <span className=\"region title\">Region</span>\r\n      </li>\r\n      {usersList}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import React, { Component } from 'react';\r\nimport './Homework3.css';\r\nimport { getUsers } from './services/usersServices';\r\nimport UserList from './Components/UserList/UserList';\r\n\r\nclass Homework3 extends Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    getUsers().then(users => this.setState({ users }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"homework3\">\r\n        <h2 className=\"users-header\">Users</h2>\r\n        <UserList users={this.state.users} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Homework3;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Homework1 from './Components/Homework1/Homework1';\nimport Homework2 from './Components/Homework2/Homework2';\nimport Homework3 from './Components/Homework3/Homework3';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"homework-header\">Homework 1</h1>\n        <Homework1 />\n        <h1 className=\"homework-header\">Homework 2</h1>\n        <Homework2 />\n        <h1 className=\"homework-header\">Homework 3</h1>\n        <Homework3 />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}