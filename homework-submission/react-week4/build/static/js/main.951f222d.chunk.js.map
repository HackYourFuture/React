{"version":3,"sources":["components/NavBar/linksArray.js","components/NavBar/NavBar.js","components/Home/Home.js","components/Week1/list.js","components/Week1/data.js","components/Week1/Week1.js","components/Week2/TodoItems/TodoItems.js","components/Week2/AddItem/AddItem.js","components/Week2/todoData/todoData.js","components/Week2/Week2.js","components/Week3/Week3.js","components/PageNotFound/PageNotFound.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["linksArray","href","text","NavBar","useState","MobileMenu","setMobileMenu","linkClickHandler","className","map","link","index","key","exact","to","onClick","Home","ListItem","done","description","deadline","List","children","data","id","Week1","item","TodoItems","items","deleteItemFnc","checkBoxFnc","ListItems","length","type","checked","onChange","colSpan","AddItem","addItemFnc","setItem","handelChange","event","target","value","onSubmit","preventDefault","alert","autoComplete","placeholder","required","todoData","Week2","setData","filter","itemIndex","findIndex","shortid","generate","push","Week3","loading","setLoding","userInfo","setUserInfo","error","setError","getUser","a","fetch","dataPromis","json","dataUser","console","log","useEffect","message","src","photo","alt","name","region","gender","age","email","PageNotFound","footerLinksArray","Footer","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.951f222d.chunk.js","sourcesContent":["const linksArray = [\r\n  { href: '/', text: 'Home' },\r\n  { href: '/week1', text: 'Week1' },\r\n  { href: '/week2', text: 'Week2' },\r\n  { href: '/week3', text: 'Week3' },\r\n];\r\n\r\nexport default linksArray;\r\n","import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './NavBar.css';\r\nimport linksArray from './linksArray';\r\n\r\nconst NavBar = () => {\r\n  const [MobileMenu, setMobileMenu] = useState(false);\r\n\r\n  const iconClickhandler = () => {\r\n    !MobileMenu ? setMobileMenu(true) : setMobileMenu(false);\r\n  };\r\n  const linkClickHandler = () => {\r\n    setMobileMenu(false);\r\n  };\r\n\r\n  return (\r\n    <div className={MobileMenu ? 'nb_topnav nb_responsive ' : 'nb_topnav'}>\r\n      {linksArray.map((link, index) => (\r\n        <NavLink key={index} exact to={link.href} onClick={linkClickHandler}>\r\n          {link.text}\r\n        </NavLink>\r\n      ))}\r\n      <span className=\"nb_icon\" onClick={iconClickhandler}>\r\n        <i>&#8801;</i>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <header className=\"App-header\">\r\n        <h1>Home Page</h1>\r\n      </header>\r\n      <main className=\"App-main\">\r\n        <p className=\"home_p\">\r\n          This small application is to summarize what I have learned during the Reat module.\r\n          <br />I upgraded my work, on the both sides : styling and React Script.\r\n          <br />\r\n          Everything looks better now. And there is also page 404, But I am wondering about : how to\r\n          give the browser something like a fake server's response with Status Code 404.\r\n          <br />I tried to change how I'm handling fetching new data after clicking on the button.\r\n          But I couldn't make it better. So it stays the same.\r\n        </p>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\n// ListItem component: it is to create HTML list item.\r\nexport const ListItem = ({ done, description, deadline }) => {\r\n  return (\r\n    <li className={done ? 'w1_line_through' : 'w1_no_line'}>\r\n      {description} , {deadline}.\r\n    </li>\r\n  );\r\n};\r\n\r\n// List component: it is to create HTML Unordered List:\r\nexport const List = ({ children }) => {\r\n  return <ul>{children}</ul>;\r\n};\r\n","let data = [\r\n  {\r\n    id: 1,\r\n    description: 'Get out of bed',\r\n    deadline: '2017-09-11',\r\n    done: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    description: 'Brush teeth',\r\n    deadline: '2017-09-10',\r\n    done: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    description: 'Eat breakfast',\r\n    deadline: '2017-09-09',\r\n    done: false,\r\n  },\r\n];\r\nexport default data;\r\n","import React from 'react';\r\nimport { ListItem, List } from './list';\r\nimport data from './data';\r\nimport './Week1.css';\r\nconst Week1 = () => {\r\n  return (\r\n    <div>\r\n      <header className=\"App-header\">\r\n        <h1>Week1</h1>\r\n      </header>\r\n      <main className=\"App-main\">\r\n        <List>\r\n          <ListItem description=\"Get out of bed\" deadline=\"Wed Sep 13 2017\" />\r\n          <ListItem description=\"Brush teeth\" deadline=\"Thu Sep 14 2017\" />\r\n          <ListItem description=\"Eat breakfast\" deadline=\"Fri Sep 15 2017\" />\r\n        </List>\r\n        <List>\r\n          {data.map((item, index) => (\r\n            <ListItem key={index} {...item} />\r\n          ))}\r\n        </List>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Week1;\r\n","import React from 'react';\r\n\r\nconst TodoItems = ({ items, deleteItemFnc, checkBoxFnc }) => {\r\n  const ListItems = items.length ? (\r\n    items.map((item, index) => {\r\n      return (\r\n        <tr key={index}>\r\n          <td className=\"w2_check-column\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={item.done ? 'checked' : ''}\r\n              id={item.id}\r\n              onChange={() => checkBoxFnc(item.id)}\r\n            ></input>\r\n          </td>\r\n          <td className={item.done ? 'w2_description w2_line_through' : 'w2_description'}>\r\n            {item.description}\r\n          </td>\r\n          <td className=\"w2_deadline\">{item.deadline}</td>\r\n          <td className=\"w2_action w2_icon\" onClick={() => deleteItemFnc(item.id)}>\r\n            &times;\r\n          </td>\r\n        </tr>\r\n      );\r\n    })\r\n  ) : (\r\n    <tr>\r\n      <td colSpan=\"4\">\r\n        <p className=\"w2_no_items\">No Items</p>\r\n      </td>\r\n    </tr>\r\n  );\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th className=\"w2_check-column \">Check</th>\r\n          <th className=\"w2_description \">Description</th>\r\n          <th className=\"w2_deadline \">Deadline</th>\r\n          <th className=\"w2_action \">Delete</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>{ListItems}</tbody>\r\n    </table>\r\n  );\r\n};\r\nexport default TodoItems;\r\n","import React, { useState } from 'react';\r\n\r\nconst AddItem = ({ addItemFnc }) => {\r\n  const [item, setItem] = useState({ id: '', description: '', deadline: '', done: false });\r\n\r\n  const handelChange = event => {\r\n    setItem({ ...item, [event.target.id]: event.target.value });\r\n  };\r\n\r\n  const handelSubmit = event => {\r\n    event.preventDefault();\r\n    if (item.description && item.deadline) {\r\n      addItemFnc(item);\r\n      setItem({ id: '', description: '', deadline: '', done: false });\r\n    } else {\r\n      alert('You forget to write it!!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handelSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        placeholder=\"Enter description...\"\r\n        id=\"description\"\r\n        onChange={handelChange}\r\n        value={item.description}\r\n        required=\"required\"\r\n      />\r\n      <input\r\n        type=\"date\"\r\n        placeholder=\"dd-mm-yyyy.\"\r\n        id=\"deadline\"\r\n        onChange={handelChange}\r\n        value={item.deadline}\r\n        required=\"required\"\r\n      />\r\n      <input type=\"submit\" value=\"Add\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddItem;\r\n","const todoData = [\r\n  {\r\n    id: 1,\r\n    description: 'Get out of bed',\r\n    deadline: '2017-09-11',\r\n    done: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    description: 'Brush teeth',\r\n    deadline: '2017-09-10',\r\n    done: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    description: 'Eat breakfast',\r\n    deadline: '2017-09-09',\r\n    done: false,\r\n  },\r\n];\r\n\r\nexport default todoData;\r\n","import React, { useState } from 'react';\r\nimport TodoItems from './TodoItems/TodoItems';\r\nimport AddItem from './AddItem/AddItem';\r\nimport todoData from './todoData/todoData';\r\nimport shortid from 'shortid';\r\nimport './Week2.css';\r\n\r\nconst Week2 = () => {\r\n  const [data, setData] = useState({\r\n    items: todoData,\r\n  });\r\n\r\n  const deleteItemFnc = id => {\r\n    let items = data.items.filter(item => item.id !== id);\r\n    setData({ items });\r\n  };\r\n\r\n  const addItemFnc = item => {\r\n    item.id = shortid.generate();\r\n    const items = data.items;\r\n    items.push(item);\r\n    setData({ items });\r\n  };\r\n\r\n  const checkBoxFnc = id => {\r\n    const items = data.items;\r\n    const itemIndex = items.findIndex(item => item.id === id);\r\n    items[itemIndex].done ? (items[itemIndex].done = false) : (items[itemIndex].done = true);\r\n    setData({ items });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <header className=\"App-header\">\r\n        <h1>Week2</h1>\r\n      </header>\r\n      <main className=\"App-main w2_container\">\r\n        <h3>Todo list App</h3>\r\n        <TodoItems items={data.items} deleteItemFnc={deleteItemFnc} checkBoxFnc={checkBoxFnc} />\r\n        <AddItem addItemFnc={addItemFnc} />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Week2;\r\n// _____________\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Week3.css';\r\n\r\nconst Week3 = () => {\r\n  const [loading, setLoding] = useState(true);\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [error, setError] = useState(false);\r\n\r\n  const clickHandel = () => {\r\n    setLoding(true);\r\n  };\r\n\r\n  const getUser = async () => {\r\n    try {\r\n      if (loading) {\r\n        const dataPromis = await fetch('https://uinames.com/api/?ext');\r\n        const dataUser = await dataPromis.json();\r\n        setUserInfo(dataUser);\r\n        setLoding(false);\r\n        console.log('getuser function');\r\n      }\r\n    } catch (error) {\r\n      setError(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, [loading]);\r\n\r\n  return loading && !userInfo ? (\r\n    <div className={error ? 'w3_on_screen w3_warning' : 'w3_loading'}>\r\n      {error ? `Error: ${error.message}. server is busy, Try later` : 'loading...................'}\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      <header className=\"App-header\">\r\n        <div className={error ? 'w3_on_screen w3_warning' : 'w3_none '}>\r\n          {error ? `Error: ${error.message}` : 'No Error'}\r\n          <br />\r\n          Can not get info for new user. Try later.\r\n        </div>\r\n        <h1>Week3</h1>\r\n      </header>\r\n      <main className=\"App-main\">\r\n        <h3 className={!error ? 'w3_on_screen' : 'w3_none '}>\r\n          {loading ? (\r\n            <span className=\"w3_loading\">loading new info</span>\r\n          ) : (\r\n            <span>Display user info</span>\r\n          )}\r\n        </h3>\r\n        <img src={userInfo.photo} alt=\"User\" />\r\n\r\n        <ul>\r\n          <li>Name: {userInfo.name}</li>\r\n          <li>Region: {userInfo.region}</li>\r\n          <li>Gender: {userInfo.gender}</li>\r\n          <li>Age: {userInfo.age}</li>\r\n          <li>Email: {userInfo.email}</li>\r\n        </ul>\r\n        <button onClick={clickHandel}>Get another user</button>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Week3;\r\n","import React from 'react';\r\nconst PageNotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1>PageNotFound</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageNotFound;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport linksArray from '../NavBar/linksArray';\r\nimport './Footer.css';\r\nconst footerLinksArray = linksArray.filter(link => link.href !== '/');\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer_nav\">\r\n      {footerLinksArray.map((link, index) => (\r\n        <NavLink key={index} exact to={link.href}>\r\n          {link.text}\r\n        </NavLink>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport NavBar from './components/NavBar/NavBar';\nimport Home from './components/Home/Home';\nimport Week1 from './components/Week1/Week1';\nimport Week2 from './components/Week2/Week2';\nimport Week3 from './components/Week3/Week3';\nimport PageNotFound from './components/PageNotFound/PageNotFound';\nimport Footer from './components/Footer/Footer';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/week1\" component={Week1} />\n          <Route exact path=\"/week2\" component={Week2} />\n          <Route exact path=\"/week3\" component={Week3} />\n          <Route component={PageNotFound} />\n        </Switch>\n        {/* <header className=\"App-header\"></header> */}\n        <Footer />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}