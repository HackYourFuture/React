{"version":3,"sources":["components/PreviousHomeworks.js","components/PhotoContainer.js","components/NameHeader.js","components/ListItem.js","components/List.js","components/Homework3.js","App.js","serviceWorker.js","index.js"],"names":["ListTitle","text","this","props","className","React","Component","Button","clickHandler","id","type","name","onClick","InputForm","onSubmit","placeholder","required","pattern","ListItem","description","deadline","done","DynamicList","todos","map","todo","index","key","PreviousHomeworks","state","todoItems","event","preventDefault","newTodo","length","target","value","console","log","setState","removedItem","filter","item","removeTodo","addTodo","PhotoContainer","url","src","alt","NameHeader","List","person","gender","region","phone","birthday","dmy","email","password","Homework3","surname","photo","App","data","fillData","bind","Math","floor","random","window","addEventListener","fetch","response","json","document","body","keyCode","getRandomArbitrary","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ed3df106.chunk.js","sourcesContent":["import React from 'react';\r\n//import ReactDOM from 'react-dom';\r\nclass ListTitle extends React.Component {\r\n  render() {\r\n    const { text } = this.props;\r\n    return <h2 className=\"list_title\">{text}</h2>;\r\n  }\r\n}\r\n\r\nclass Button extends React.Component {\r\n  render() {\r\n    const { text, clickHandler, id } = this.props;\r\n    return (\r\n      <button type=\"button\" className=\"button\" name={id} onClick={clickHandler}>\r\n        {text}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nclass InputForm extends React.Component {\r\n  render() {\r\n    const { clickHandler } = this.props;\r\n    return (\r\n      <form className=\"form\" onSubmit={clickHandler}>\r\n        <input className=\"input\" type=\"text\" name=\"description\" placeholder=\"Description\" />\r\n        <input\r\n          className=\"input\"\r\n          type=\"date\"\r\n          name=\"deadline\"\r\n          required\r\n          pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\"\r\n        />\r\n\r\n        <button type=\"submit\">add</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nclass ListItem extends React.Component {\r\n  render() {\r\n    const { id, description, deadline, done, clickHandler } = this.props;\r\n\r\n    return (\r\n      <li className={`li_style ${done ? 'done' : ''}`}>\r\n        {description} {deadline}\r\n        <Button text=\"delete\" clickHandler={clickHandler} id={id} />\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nclass DynamicList extends React.Component {\r\n  render() {\r\n    const { todos, clickHandler } = this.props;\r\n    return (\r\n      <ol className=\"list\">\r\n        {todos.map((todo, index) => (\r\n          <ListItem key={index} {...todo} clickHandler={clickHandler} />\r\n        ))}\r\n      </ol>\r\n    );\r\n  }\r\n}\r\n\r\nclass PreviousHomeworks extends React.Component {\r\n  state = {\r\n    todoItems: [\r\n      {\r\n        id: 1,\r\n        description: 'Get out of bed',\r\n        deadline: '2017-09-11',\r\n        done: true,\r\n      },\r\n      {\r\n        id: 2,\r\n        description: 'Brush teeth',\r\n        deadline: '2017-09-10',\r\n        done: false,\r\n      },\r\n      {\r\n        id: 3,\r\n        description: 'Eat breakfast',\r\n        deadline: '2017-09-09',\r\n        done: false,\r\n      },\r\n    ],\r\n  };\r\n  addTodo(event) {\r\n    event.preventDefault();\r\n    //If the state has 0 item, newId is 1, else id of the last element plus 1\r\n    const newId = this.state.todoItems.length\r\n      ? this.state.todoItems[this.state.todoItems.length - 1].id + 1\r\n      : 1;\r\n    const newTodo = {\r\n      id: newId,\r\n      description: event.target.description.value,\r\n      deadline: event.target.deadline.value,\r\n      done: false,\r\n    };\r\n    console.log(newTodo.deadline);\r\n    this.setState({ todoItems: [...this.state.todoItems, newTodo] });\r\n  }\r\n\r\n  removeTodo(event) {\r\n    const removedItem = event.target.name;\r\n\r\n    this.setState({\r\n      // eslint-disable-next-line eqeqeq\r\n      todoItems: [...this.state.todoItems].filter(item => item.id != removedItem),\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ListTitle text=\"Dynamic List\" />\r\n        <DynamicList todos={this.state.todoItems} clickHandler={event => this.removeTodo(event)} />\r\n\r\n        <InputForm clickHandler={event => this.addTodo(event)} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n//const root = document.getElementById('root');\r\n//ReactDOM.render(<App />, root);\r\n\r\nexport default PreviousHomeworks;\r\n","import React from 'react';\r\nclass PhotoContainer extends React.Component {\r\n  render() {\r\n    const { url } = this.props;\r\n    return (\r\n      <div className=\"img\">\r\n        <img src={url} alt=\"user\"></img>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PhotoContainer;\r\n","import React from 'react';\r\nclass NameHeader extends React.Component {\r\n  render() {\r\n    const { text } = this.props;\r\n\r\n    return <h1 className=\"nameHeader\">{text}</h1>;\r\n  }\r\n}\r\nexport default NameHeader;","import React from 'react';\r\nclass ListItem extends React.Component {\r\n  render() {\r\n    const { text } = this.props;\r\n\r\n    return <li className=\"li_style\">{text}</li>;\r\n  }\r\n}\r\nexport default ListItem;\r\n","import React from 'react';\r\nimport ListItem from './ListItem';\r\n\r\nclass List extends React.Component {\r\n  render() {\r\n    const { person } = this.props;\r\n\r\n    return (\r\n      <ul className=\"list\">\r\n        <ListItem text={person.gender} />\r\n        <ListItem text={person.region} />\r\n        <ListItem text={person.phone} />\r\n        <ListItem text={person.birthday.dmy} />\r\n        <ListItem text={person.email} />\r\n        <ListItem text={person.password} />\r\n      </ul>\r\n    );\r\n  }\r\n}\r\nexport default List;\r\n","import React from 'react';\r\nimport PhotoContainer from './PhotoContainer';\r\nimport NameHeader from './NameHeader';\r\nimport List from './List';\r\nclass Homework3 extends React.Component {\r\n  render() {\r\n    const { person } = this.props;\r\n    return (\r\n      <div className=\"Homework3\">\r\n        <NameHeader text={`${person.name} ${person.surname}`}></NameHeader>\r\n        <PhotoContainer url={person.photo}></PhotoContainer>\r\n        <List person={person}></List>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Homework3;\r\n","import React from 'react';\n\nimport './App.css';\nimport './PreviousHomeworks.css';\nimport './components/PreviousHomeworks';\nimport PreviousHomeworks from './components/PreviousHomeworks';\n\nimport Homework3 from './components/Homework3';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.data = {};\n\n    this.state = {\n      person: {\n        name: 'Press',\n        surname: 'Spacebar',\n        gender: '',\n        region: '',\n        phone: '',\n        birthday: '',\n        email: '',\n        password: '',\n        photo: '',\n      },\n    };\n    this.fillData = this.fillData.bind(this);\n  }\n\n  getRandomArbitrary() {\n    return Math.floor(Math.random() * 10);\n  }\n\n  async componentDidMount() {\n    window.addEventListener('keyup', this.fillData);\n    const response = await fetch('https://uinames.com/api/?amount=10&ext');\n\n    this.data = await response.json();\n    console.log(this.data);\n    document.body.addEventListener('onKeyDown', this.fillData);\n  }\n  fillData(event) {\n    if (event.keyCode === 32) {\n      this.setState({ person: this.data[this.getRandomArbitrary()] });\n      console.log(this.state);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <PreviousHomeworks></PreviousHomeworks>\n        <Homework3 person={this.state.person}></Homework3>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}