{"version":3,"sources":["components/previous-homework2.js","components/previous-homework1.js","components/previous-homeworks.js","components/sub-components/profile-image.js","components/sub-components/profile-fullname.js","components/sub-components/profile-details.js","components/week3-homework.js","App.js","serviceWorker.js","index.js"],"names":["toDoItems","id","description","deadLine","done","Label","text","className","htmlFor","Input","name","type","placeholder","defaultValue","Header","Button","onClick","Form","addListItem","x","Date","y","getFullYear","toString","m","getMonth","d","getDate","length","date","onSubmit","ListItem","props","state","this","setState","key","switchDoneState","bind","React","Component","DynamicList","toDoArr","deleteSelectedItem","map","item","i","PreviousHomework2","event","itemToDelete","target","parentElement","newData","data","filter","preventDefault","value","itemToAdd","copyNewData","test","push","alert","deadline","ListHeader","listHead","StaticList","PreviousHomework1","PreviousHomeworks","changeClass","display","ProfileImage","url","src","alt","profileFullname","ProfileDetails","profile","gender","region","phone","birthday","mdy","email","password","HomeworkWeek3","selectRandomProfile","newIndex","Math","floor","random","currentProfile","handleKeyUp","e","which","code","error","loaded","profiles","urlToFetch","window","addEventListener","fetch","then","results","json","message","console","log","photo","surname","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4402076d.chunk.js","sourcesContent":["import React from 'react';\nimport './styles/previous-homework2.css';\nconst toDoItems = [\n  {\n    id: 1,\n    description: 'Get out of bed',\n    deadLine: '2017-09-11',\n    done: true,\n  },\n  {\n    id: 2,\n    description: 'Brush teeth',\n    deadLine: '2017-09-10',\n    done: false,\n  },\n  {\n    id: 3,\n    description: 'Eat breakfast',\n    deadLine: '2017-09-09',\n    done: false,\n  },\n];\n\nconst Label = ({ text, className, htmlFor }) => {\n  return (\n    <label className={className} htmlFor={htmlFor}>\n      {text}\n    </label>\n  );\n};\n\nconst Input = ({ name, className, type, placeholder, defaultValue }) => {\n  return (\n    <input\n      name={name}\n      className={className}\n      type={type}\n      placeholder={placeholder}\n      defaultValue={defaultValue}\n    ></input>\n  );\n};\n\nconst Header = ({ text, className }) => {\n  return <h2 className={className}>{text}</h2>;\n};\n\nconst Button = ({ text, type, className, onClick }) => {\n  return (\n    <button type={type} className={className} onClick={onClick}>\n      {text}\n    </button>\n  );\n};\n\nconst Form = ({ addListItem }) => {\n  const x = new Date();\n  const y = x.getFullYear().toString();\n  let m = (x.getMonth() + 1).toString();\n  let d = x.getDate().toString();\n  // eslint-disable-next-line\n  d.length == 1 && (d = '0' + d);\n  // eslint-disable-next-line\n  m.length == 1 && (m = '0' + m);\n  let date = y + '-' + m + '-' + d;\n  return (\n    <div>\n      <form onSubmit={addListItem} className=\"item-add-form\">\n        <Label text=\"Add an item to list\" className=\"label\" htmlFor=\"itemToAdd\" />\n        <Input\n          name=\"itemToAdd\"\n          className=\"itemInput\"\n          placeholder=\"write description of todo item\"\n          type=\"text\"\n        />\n        <br></br>\n        <Label text=\"Deadline\" className=\"label\" htmlFor=\"deadLine\" />\n        <Input className=\"input\" type=\"date\" name=\"deadLine\" defaultValue={date} />\n        <br></br>\n        <Button text=\"Add item\" type=\"submit\" className=\"addButton\" />\n      </form>\n    </div>\n  );\n};\n\nclass ListItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { done: this.props.done };\n  }\n\n  switchDoneState() {\n    this.setState({ done: !this.state.done });\n  }\n  render() {\n    const { id, description, deadLine, onClick } = this.props;\n    return (\n      <li key={id} id={id} className={`listItem ${this.state.done}`}>\n        <p onClick={this.switchDoneState.bind(this)} className=\"itemDesc\">\n          {description}\n        </p>\n        <p className=\"itemDead\">{deadLine}</p>\n        <Button text=\"Delete item !\" className=\"deleteButton\" onClick={onClick} />\n      </li>\n    );\n  }\n}\n\nclass DynamicList extends React.Component {\n  render() {\n    let { toDoArr, deleteSelectedItem } = this.props;\n    return (\n      <ul className=\"dynamic-ul\">\n        <Header className=\"listHeader\" text=\"Todo List\" />\n        {toDoArr.map((item, i) => (\n          <ListItem\n            key={item.id}\n            id={item.id}\n            done={item.done}\n            description={item.description}\n            deadLine={item.deadLine}\n            onClick={deleteSelectedItem}\n          />\n        ))}\n      </ul>\n    );\n  }\n}\n\nclass PreviousHomework2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { data: toDoItems };\n  }\n\n  deleteSelectedItem = event => {\n    const itemToDelete = event.target.parentElement.id;\n    const data = this.state.data;\n    // eslint-disable-next-line\n    const newData = data.filter(item => item.id != itemToDelete);\n    this.setState({ data: newData });\n  };\n\n  addListItem = event => {\n    event.preventDefault();\n    const value = event.target.itemToAdd.value;\n    if (value === '') {\n      alert(\"empty string can't be added\");\n      return;\n    }\n    const newData = this.state.data;\n    const copyNewData = [...newData];\n    let deadLine = event.target.deadLine.value;\n    const dateTest = /([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/;\n    if (!dateTest.test(deadLine)) {\n      deadLine = 'not defined';\n    }\n    copyNewData.push({\n      id: copyNewData[copyNewData.length - 1].id + 1,\n      description: value,\n      deadLine: deadLine,\n      done: false,\n    });\n    this.setState({\n      data: copyNewData,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"todo-list-injected\">\n        <Form addListItem={this.addListItem.bind(this)} />\n        <DynamicList toDoArr={this.state.data} deleteSelectedItem={this.deleteSelectedItem} />\n      </div>\n    );\n  }\n}\n\nexport default PreviousHomework2;\n","import React from 'react';\nimport './styles/previous-homework1.css';\nconst toDoItems = [\n  {\n    id: 1,\n    description: 'Get out of bed',\n    deadline: '2017-09-11',\n    done: true,\n  },\n  {\n    id: 2,\n    description: 'Brush teeth',\n    deadline: '2017-09-10',\n    done: false,\n  },\n  {\n    id: 3,\n    description: 'Eat breakfast',\n    deadline: '2017-09-09',\n    done: false,\n  },\n];\n\n//the goal of this component is to define/create a reusable list item that uses own function to set state.\n// props.description and props.deadline are to write in list item (<li>) as text\n// props.done is to initialize state.done and gives the ListItem a line-through when it's true.\n\nclass ListItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { done: props.done };\n  }\n\n  switchDoneState() {\n    this.setState({ done: !this.state.done });\n  }\n\n  render() {\n    const { description, deadline } = this.props;\n    return (\n      <li onClick={this.switchDoneState.bind(this)} className={`listItem ${this.state.done}`}>\n        {description} - {deadline}\n      </li>\n    );\n  }\n}\n\n//the goal of this component is to define/create a reusable list header.\n//it returns a header with taken parameter/prop.type + \"List\"\n\nconst ListHeader = listHead => {\n  return <h2 className=\"listHeader\">{listHead.type} List</h2>;\n};\n\n//the goal of this component is to create an unordered list statically\n//it returns a ul which has a header(with given prop.type) 3 item with given props.\nclass StaticList extends React.Component {\n  render() {\n    return (\n      <ul>\n        <ListHeader type=\"Static\" />\n        <ListItem description=\"Get out of bed\" deadline=\"2017-09-11\" done={true} />\n        <ListItem description=\"Brush teeth\" deadline=\"2017-09-10\" done={false} />\n        <ListItem description=\"Eat breakfast\" deadline=\"2017-09-09\" done={false} />\n      </ul>\n    );\n  }\n}\n//the goal of this component is to create an unordered list dynamically\n//it returns a ul which has items as many as given props.array has.\nclass DynamicList extends React.Component {\n  render() {\n    const { toDoArr } = this.props;\n    return (\n      <ul>\n        <ListHeader type=\"Dynamic\" />\n        {toDoArr.map(item => (\n          <ListItem key={item.id} {...item} />\n        ))}\n      </ul>\n    );\n  }\n}\n\n//the goal of this component is to inject lists to html. it returns a div element which has two ul.\nclass PreviousHomework1 extends React.Component {\n  render() {\n    return (\n      <div className=\"homework1-div\">\n        <StaticList />\n        <DynamicList toDoArr={toDoItems} />\n      </div>\n    );\n  }\n}\n\nexport default PreviousHomework1;\n","import React from 'react';\nimport PreviousHomework2 from './previous-homework2';\nimport PreviousHomework1 from './previous-homework1';\nimport './styles/previous-homeworks.css';\n\nclass PreviousHomeworks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { display: 'none', text: 'SHOW PREVIOUS HOMEWORK' };\n  }\n  changeClass = () => {\n    if (this.state.display === 'none') {\n      this.setState({\n        display: 'block',\n        text: 'HIDE PREVIOUS HOMEWORKS',\n      });\n    } else {\n      this.setState({ display: 'none', text: 'SHOW PREVIOUS HOMEWORKS' });\n    }\n  };\n  render() {\n    const { display, text } = this.state;\n    return (\n      <div>\n        <div className={display}>\n          <PreviousHomework1 />\n          <PreviousHomework2 />\n        </div>\n        <button className=\"show-hide-button\" onClick={this.changeClass}>\n          {text}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default PreviousHomeworks;\n","import React from 'react';\nimport '../styles/profile-image.css';\n\nconst ProfileImage = ({ url }) => {\n  return (\n    <div className=\"profile-photo-div\">\n      <img src={url} alt=\"profile\" className=\"profile-photo\" />\n    </div>\n  );\n};\nexport default ProfileImage;\n","import React from 'react';\nimport '../styles/profile-fullname.css';\n\nconst profileFullname = ({ name }) => {\n  return <h1 className=\"profile-fullname\">{name}</h1>;\n};\nexport default profileFullname;\n","import React from 'react';\nimport '../styles/profile-details.css';\n\nconst ProfileDetails = ({ profile }) => {\n  return (\n    <ul className=\"details-list\">\n      <li key=\"1\">\n        <span>👤 {profile.gender}</span>\n      </li>\n      <li key=\"2\">\n        <span>🌐 {profile.region}</span>\n      </li>\n      <li key=\"3\">\n        <span>📞  {profile.phone}</span>\n      </li>\n      <li key=\"4\">\n        <span>🎂  {profile.birthday.mdy}</span>\n      </li>\n      <li key=\"5\">\n        <span>✉️  {profile.email}</span>\n      </li>\n      <li key=\"6\">\n        <span>🔑  {profile.password}</span>\n      </li>\n    </ul>\n  );\n};\nexport default ProfileDetails;\n","import React from 'react';\nimport ProfileImage from './sub-components/profile-image';\nimport ProfileFullname from './sub-components/profile-fullname';\nimport ProfileDetails from './sub-components/profile-details';\nimport './styles/week3-homework.css';\n\nclass HomeworkWeek3 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      loaded: false,\n      profiles: [],\n      currentProfile: 0,\n      urlToFetch: '?amount=10&ext',\n    };\n  }\n\n  selectRandomProfile = () => {\n    const newIndex = Math.floor(Math.random() * 10);\n    this.setState({ currentProfile: newIndex });\n  };\n\n  handleKeyUp = e => {\n    if (e.which === 32 || e.code === 'Space') {\n      this.selectRandomProfile();\n    }\n  };\n\n  componentDidMount() {\n    window.addEventListener('keyup', this.handleKeyUp.bind(this));\n    fetch(`https://uinames.com/api/${this.state.urlToFetch}`)\n      .then(results => results.json())\n      .then(\n        data => {\n          this.setState({ profiles: data, loaded: true });\n        },\n        error => {\n          this.setState({\n            loaded: true,\n            error,\n          });\n        },\n      );\n  }\n  render() {\n    const { error, loaded, profiles, currentProfile } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!loaded) {\n      return <div>Loading...</div>;\n    } else {\n      console.log(this.state.profiles);\n      return (\n        <div className=\"week3-homework\">\n          {loaded && <ProfileImage url={profiles[currentProfile].photo} />}\n          {loaded && (\n            <ProfileFullname\n              name={`${profiles[currentProfile].name} ${profiles[currentProfile].surname}`}\n            />\n          )}\n          {loaded && <ProfileDetails profile={profiles[currentProfile]} />}\n        </div>\n      );\n    }\n  }\n}\nexport default HomeworkWeek3;\n","import React from 'react';\nimport './App.css';\nimport PreviousHomeworks from './components/previous-homeworks';\nimport HomeworkWeek3 from './components/week3-homework';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PreviousHomeworks />\n      <HomeworkWeek3 />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}